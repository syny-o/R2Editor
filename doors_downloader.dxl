
    // Turn off runlimit for timing
    pragma encoding,"utf-8"
    pragma runLim,0

    string file_location = "doors/doors_output.txt"

    // Open stream
    Stream out = write file_location
    Object o
    Link outLink
    LinkRef lrIn
    Module m
    Baseline b
    string module_name
    AttrDef ad
    string objAttrName 

    Module mSpecificBaseline
    
        
        m = read("/EPB Ford GE2 MY24 Tailor/02 System Specifications/01 System Requirements/SyRS",true)

        //b = getMostRecentBaseline(m)

        module_name = name m
        module_path = path m
        
        out << "<<<MODULE_START>>>\n<PATH_START>" module_path "/" module_name "<PATH_END>" "\n"

        out << "<BASELINES_START>" "\n"

        for b in m do {
            out << "<BASELINE_START><VERSION_START>"(major b)"."(minor b)"."(suffix b)"<VERSION_END><USER_START>" (user b) "<USER_END><DATE_START>" (dateOf b)"<DATE_END><ANNOTATION_START>"(annotation b)"<ANNOTATION_END><BASELINE_END>\n"
        }

        out << "<BASELINES_END>" "\n"

        out << "<ATTRIBUTES_START>" "\n"

        for objAttrName in (m) do
        { 
            out << "<ATTRIBUTE_START>" objAttrName "<ATTRIBUTE_END>" 
        }

        out << "<ATTRIBUTES_END>" "\n"

        out << "<REQUIREMENTS_START>" "\n"

        mSpecificBaseline = load (m, baseline(5,1,"Initial"), false)
        
        for o in entire(mSpecificBaseline) do {
            out << "<REQUIREMENT_START><ID_START>"identifier(o)"<ID_END><LEVEL_START>"level(o)"<LEVEL_END><HEADING_START>"o."Object Heading""<HEADING_END><COLUMNS_START>""<COLUMN_START>"o."Object Text_DXL""<COLUMN_END>""<COLUMN_START>"o."Object Text""<COLUMN_END>""<COLUMN_START>"o."010_Object Type""<COLUMN_END>""<COLUMN_START>"o."011_Object State""<COLUMN_END>""<COLUMN_START>"o."050_Test Department""<COLUMN_END>""<COLUMNS_END>"
            
            out << "<OUTLINKS_START>"
            for outLink in all (o -> "*") do {
                out << "<OUTLINK_START>"(fullName targetVersion outLink) ":" (targetAbsNo (outLink)) "<OUTLINK_END>"         
            }
            out << "<OUTLINKS_END>"
            out << "<INLINKS_START>"
            for lrIn in each (o <- "*") do {            
                out << "<INLINK_START>"(fullName sourceVersion lrIn) ":" (sourceAbsNo (lrIn)) "<INLINK_END>" 
            }
            out << "<INLINKS_END>"

            out << "<REQUIREMENT_END>"        
        }

        out << "<REQUIREMENTS_END>" "\n"    

        out << "<<<MODULE_END>>>" "\n"

        

        
        m = read("/EPB Ford GE2 MY24 Tailor/023 System Diagnostic Tables/DMT - PBC",true)

        //b = getMostRecentBaseline(m)

        module_name = name m
        module_path = path m
        
        out << "<<<MODULE_START>>>\n<PATH_START>" module_path "/" module_name "<PATH_END>" "\n"

        out << "<BASELINES_START>" "\n"

        for b in m do {
            out << "<BASELINE_START><VERSION_START>"(major b)"."(minor b)"."(suffix b)"<VERSION_END><USER_START>" (user b) "<USER_END><DATE_START>" (dateOf b)"<DATE_END><ANNOTATION_START>"(annotation b)"<ANNOTATION_END><BASELINE_END>\n"
        }

        out << "<BASELINES_END>" "\n"

        out << "<ATTRIBUTES_START>" "\n"

        for objAttrName in (m) do
        { 
            out << "<ATTRIBUTE_START>" objAttrName "<ATTRIBUTE_END>" 
        }

        out << "<ATTRIBUTES_END>" "\n"

        out << "<REQUIREMENTS_START>" "\n"

        for o in entire(m) do {
            out << "<REQUIREMENT_START><ID_START>"identifier(o)"<ID_END><LEVEL_START>"level(o)"<LEVEL_END><HEADING_START>"o."Object Heading""<HEADING_END><COLUMNS_START>""<COLUMN_START>"o."TRW DTC Name""<COLUMN_END>""<COLUMN_START>"o."TRW Func Actuator Apply Left""<COLUMN_END>""<COLUMN_START>"o."TRW Func Actuator Apply Right""<COLUMN_END>""<COLUMN_START>"o."TRW Func Actuator Release Left""<COLUMN_END>""<COLUMN_START>"o."TRW Func Actuator Release Right""<COLUMN_END>""<COLUMN_START>"o."TRW Func Dynamic Apply RWU""<COLUMN_END>""<COLUMN_START>"o."TRW Func Auto Adjust""<COLUMN_END>""<COLUMN_START>"o."TRW Func GDA""<COLUMN_END>""<COLUMN_START>"o."TRW Func RAR""<COLUMN_END>""<COLUMN_START>"o."TRW Func HTR""<COLUMN_END>""<COLUMN_START>"o."TRW Func Rollerbench Apply""<COLUMN_END>""<COLUMNS_END>"
            
            out << "<OUTLINKS_START>"
            for outLink in (o -> "*") do {
                out << "<OUTLINK_START>"(fullName targetVersion outLink) ":" (targetAbsNo (outLink)) "<OUTLINK_END>"         
            }
            out << "<OUTLINKS_END>"
            out << "<INLINKS_START>"
            for lrIn in each (o <- "*") do {            
                out << "<INLINK_START>"(fullName sourceVersion lrIn) ":" (sourceAbsNo (lrIn)) "<INLINK_END>" 
            }
            out << "<INLINKS_END>"

            out << "<REQUIREMENT_END>"        
        }

        out << "<REQUIREMENTS_END>" "\n"    

        out << "<<<MODULE_END>>>" "\n"

        

        
        m = read("/EPB Ford GE2 MY24 Tailor/02 System Specifications/01 System Requirements/VC-EPBi",true)

        //b = getMostRecentBaseline(m)

        module_name = name m
        module_path = path m
        
        out << "<<<MODULE_START>>>\n<PATH_START>" module_path "/" module_name "<PATH_END>" "\n"

        out << "<BASELINES_START>" "\n"

        for b in m do {
            out << "<BASELINE_START><VERSION_START>"(major b)"."(minor b)"."(suffix b)"<VERSION_END><USER_START>" (user b) "<USER_END><DATE_START>" (dateOf b)"<DATE_END><ANNOTATION_START>"(annotation b)"<ANNOTATION_END><BASELINE_END>\n"
        }

        out << "<BASELINES_END>" "\n"

        out << "<ATTRIBUTES_START>" "\n"

        for objAttrName in (m) do
        { 
            out << "<ATTRIBUTE_START>" objAttrName "<ATTRIBUTE_END>" 
        }

        out << "<ATTRIBUTES_END>" "\n"

        out << "<REQUIREMENTS_START>" "\n"

        mSpecificBaseline = load (m, baseline(6,1,"Initial"), false)
        
        for o in entire(mSpecificBaseline) do {
            out << "<REQUIREMENT_START><ID_START>"identifier(o)"<ID_END><LEVEL_START>"level(o)"<LEVEL_END><HEADING_START>"o."Object Heading""<HEADING_END><COLUMNS_START>""<COLUMN_START>"o."000_Core_Veh-Var""<COLUMN_END>""<COLUMN_START>"o."Object Text""<COLUMN_END>""<COLUMNS_END>"
            
            out << "<OUTLINKS_START>"
            for outLink in all (o -> "*") do {
                out << "<OUTLINK_START>"(fullName targetVersion outLink) ":" (targetAbsNo (outLink)) "<OUTLINK_END>"         
            }
            out << "<OUTLINKS_END>"
            out << "<INLINKS_START>"
            for lrIn in each (o <- "*") do {            
                out << "<INLINK_START>"(fullName sourceVersion lrIn) ":" (sourceAbsNo (lrIn)) "<INLINK_END>" 
            }
            out << "<INLINKS_END>"

            out << "<REQUIREMENT_END>"        
        }

        out << "<REQUIREMENTS_END>" "\n"    

        out << "<<<MODULE_END>>>" "\n"

        

        
        m = read("/EPB Ford GE2 MY24 Tailor/025 System Component Interfaces/PBC-CT",true)

        //b = getMostRecentBaseline(m)

        module_name = name m
        module_path = path m
        
        out << "<<<MODULE_START>>>\n<PATH_START>" module_path "/" module_name "<PATH_END>" "\n"

        out << "<BASELINES_START>" "\n"

        for b in m do {
            out << "<BASELINE_START><VERSION_START>"(major b)"."(minor b)"."(suffix b)"<VERSION_END><USER_START>" (user b) "<USER_END><DATE_START>" (dateOf b)"<DATE_END><ANNOTATION_START>"(annotation b)"<ANNOTATION_END><BASELINE_END>\n"
        }

        out << "<BASELINES_END>" "\n"

        out << "<ATTRIBUTES_START>" "\n"

        for objAttrName in (m) do
        { 
            out << "<ATTRIBUTE_START>" objAttrName "<ATTRIBUTE_END>" 
        }

        out << "<ATTRIBUTES_END>" "\n"

        out << "<REQUIREMENTS_START>" "\n"

        for o in entire(m) do {
            out << "<REQUIREMENT_START><ID_START>"identifier(o)"<ID_END><LEVEL_START>"level(o)"<LEVEL_END><HEADING_START>"o."Object Heading""<HEADING_END><COLUMNS_START>""<COLUMN_START>"o."011_Object State""<COLUMN_END>""<COLUMN_START>"o."Object Text""<COLUMN_END>""<COLUMNS_END>"
            
            out << "<OUTLINKS_START>"
            for outLink in (o -> "*") do {
                out << "<OUTLINK_START>"(fullName targetVersion outLink) ":" (targetAbsNo (outLink)) "<OUTLINK_END>"         
            }
            out << "<OUTLINKS_END>"
            out << "<INLINKS_START>"
            for lrIn in each (o <- "*") do {            
                out << "<INLINK_START>"(fullName sourceVersion lrIn) ":" (sourceAbsNo (lrIn)) "<INLINK_END>" 
            }
            out << "<INLINKS_END>"

            out << "<REQUIREMENT_END>"        
        }

        out << "<REQUIREMENTS_END>" "\n"    

        out << "<<<MODULE_END>>>" "\n"

        

        
        m = read("/EPB Ford GE2 MY24 Tailor/025 System Component Interfaces/CT_Datatypes",true)

        //b = getMostRecentBaseline(m)

        module_name = name m
        module_path = path m
        
        out << "<<<MODULE_START>>>\n<PATH_START>" module_path "/" module_name "<PATH_END>" "\n"

        out << "<BASELINES_START>" "\n"

        for b in m do {
            out << "<BASELINE_START><VERSION_START>"(major b)"."(minor b)"."(suffix b)"<VERSION_END><USER_START>" (user b) "<USER_END><DATE_START>" (dateOf b)"<DATE_END><ANNOTATION_START>"(annotation b)"<ANNOTATION_END><BASELINE_END>\n"
        }

        out << "<BASELINES_END>" "\n"

        out << "<ATTRIBUTES_START>" "\n"

        for objAttrName in (m) do
        { 
            out << "<ATTRIBUTE_START>" objAttrName "<ATTRIBUTE_END>" 
        }

        out << "<ATTRIBUTES_END>" "\n"

        out << "<REQUIREMENTS_START>" "\n"

        for o in entire(m) do {
            out << "<REQUIREMENT_START><ID_START>"identifier(o)"<ID_END><LEVEL_START>"level(o)"<LEVEL_END><HEADING_START>"o."Object Heading""<HEADING_END><COLUMNS_START>""<COLUMN_START>"o."011_Object State""<COLUMN_END>""<COLUMN_START>"o."100_Minimal Value""<COLUMN_END>""<COLUMN_START>"o."102_Maximal Value""<COLUMN_END>""<COLUMN_START>"o."110_Technical Comment""<COLUMN_END>""<COLUMN_START>"o."Object Text""<COLUMN_END>""<COLUMNS_END>"
            
            out << "<OUTLINKS_START>"
            for outLink in (o -> "*") do {
                out << "<OUTLINK_START>"(fullName targetVersion outLink) ":" (targetAbsNo (outLink)) "<OUTLINK_END>"         
            }
            out << "<OUTLINKS_END>"
            out << "<INLINKS_START>"
            for lrIn in each (o <- "*") do {            
                out << "<INLINK_START>"(fullName sourceVersion lrIn) ":" (sourceAbsNo (lrIn)) "<INLINK_END>" 
            }
            out << "<INLINKS_END>"

            out << "<REQUIREMENT_END>"        
        }

        out << "<REQUIREMENTS_END>" "\n"    

        out << "<<<MODULE_END>>>" "\n"

        

        
        m = read("/EPB Ford GE2 MY24 Tailor/02 System Specifications/01 System Requirements/FSC",true)

        //b = getMostRecentBaseline(m)

        module_name = name m
        module_path = path m
        
        out << "<<<MODULE_START>>>\n<PATH_START>" module_path "/" module_name "<PATH_END>" "\n"

        out << "<BASELINES_START>" "\n"

        for b in m do {
            out << "<BASELINE_START><VERSION_START>"(major b)"."(minor b)"."(suffix b)"<VERSION_END><USER_START>" (user b) "<USER_END><DATE_START>" (dateOf b)"<DATE_END><ANNOTATION_START>"(annotation b)"<ANNOTATION_END><BASELINE_END>\n"
        }

        out << "<BASELINES_END>" "\n"

        out << "<ATTRIBUTES_START>" "\n"

        for objAttrName in (m) do
        { 
            out << "<ATTRIBUTE_START>" objAttrName "<ATTRIBUTE_END>" 
        }

        out << "<ATTRIBUTES_END>" "\n"

        out << "<REQUIREMENTS_START>" "\n"

        for o in entire(m) do {
            out << "<REQUIREMENT_START><ID_START>"identifier(o)"<ID_END><LEVEL_START>"level(o)"<LEVEL_END><HEADING_START>"o."Object Heading""<HEADING_END><COLUMNS_START>""<COLUMN_START>"o."010_Object Type""<COLUMN_END>""<COLUMN_START>"o."011_Object State""<COLUMN_END>""<COLUMN_START>"o."Object Text""<COLUMN_END>""<COLUMNS_END>"
            
            out << "<OUTLINKS_START>"
            for outLink in (o -> "*") do {
                out << "<OUTLINK_START>"(fullName targetVersion outLink) ":" (targetAbsNo (outLink)) "<OUTLINK_END>"         
            }
            out << "<OUTLINKS_END>"
            out << "<INLINKS_START>"
            for lrIn in each (o <- "*") do {            
                out << "<INLINK_START>"(fullName sourceVersion lrIn) ":" (sourceAbsNo (lrIn)) "<INLINK_END>" 
            }
            out << "<INLINKS_END>"

            out << "<REQUIREMENT_END>"        
        }

        out << "<REQUIREMENTS_END>" "\n"    

        out << "<<<MODULE_END>>>" "\n"

        

        
        m = read("/EPB Ford GE2 MY24 Tailor/02 System Specifications/02 System Design/TSC",true)

        //b = getMostRecentBaseline(m)

        module_name = name m
        module_path = path m
        
        out << "<<<MODULE_START>>>\n<PATH_START>" module_path "/" module_name "<PATH_END>" "\n"

        out << "<BASELINES_START>" "\n"

        for b in m do {
            out << "<BASELINE_START><VERSION_START>"(major b)"."(minor b)"."(suffix b)"<VERSION_END><USER_START>" (user b) "<USER_END><DATE_START>" (dateOf b)"<DATE_END><ANNOTATION_START>"(annotation b)"<ANNOTATION_END><BASELINE_END>\n"
        }

        out << "<BASELINES_END>" "\n"

        out << "<ATTRIBUTES_START>" "\n"

        for objAttrName in (m) do
        { 
            out << "<ATTRIBUTE_START>" objAttrName "<ATTRIBUTE_END>" 
        }

        out << "<ATTRIBUTES_END>" "\n"

        out << "<REQUIREMENTS_START>" "\n"

        for o in entire(m) do {
            out << "<REQUIREMENT_START><ID_START>"identifier(o)"<ID_END><LEVEL_START>"level(o)"<LEVEL_END><HEADING_START>"o."Object Heading""<HEADING_END><COLUMNS_START>""<COLUMN_START>"o."010_Object Type""<COLUMN_END>""<COLUMN_START>"o."011_Object State""<COLUMN_END>""<COLUMN_START>"o."Object Text""<COLUMN_END>""<COLUMNS_END>"
            
            out << "<OUTLINKS_START>"
            for outLink in (o -> "*") do {
                out << "<OUTLINK_START>"(fullName targetVersion outLink) ":" (targetAbsNo (outLink)) "<OUTLINK_END>"         
            }
            out << "<OUTLINKS_END>"
            out << "<INLINKS_START>"
            for lrIn in each (o <- "*") do {            
                out << "<INLINK_START>"(fullName sourceVersion lrIn) ":" (sourceAbsNo (lrIn)) "<INLINK_END>" 
            }
            out << "<INLINKS_END>"

            out << "<REQUIREMENT_END>"        
        }

        out << "<REQUIREMENTS_END>" "\n"    

        out << "<<<MODULE_END>>>" "\n"

        

        
        m = read("/EPB Ford GE2 MY24 Tailor/02 System Specifications/02 System Design/SyDesign",true)

        //b = getMostRecentBaseline(m)

        module_name = name m
        module_path = path m
        
        out << "<<<MODULE_START>>>\n<PATH_START>" module_path "/" module_name "<PATH_END>" "\n"

        out << "<BASELINES_START>" "\n"

        for b in m do {
            out << "<BASELINE_START><VERSION_START>"(major b)"."(minor b)"."(suffix b)"<VERSION_END><USER_START>" (user b) "<USER_END><DATE_START>" (dateOf b)"<DATE_END><ANNOTATION_START>"(annotation b)"<ANNOTATION_END><BASELINE_END>\n"
        }

        out << "<BASELINES_END>" "\n"

        out << "<ATTRIBUTES_START>" "\n"

        for objAttrName in (m) do
        { 
            out << "<ATTRIBUTE_START>" objAttrName "<ATTRIBUTE_END>" 
        }

        out << "<ATTRIBUTES_END>" "\n"

        out << "<REQUIREMENTS_START>" "\n"

        mSpecificBaseline = load (m, baseline(6,7,null), false)
        
        for o in entire(mSpecificBaseline) do {
            out << "<REQUIREMENT_START><ID_START>"identifier(o)"<ID_END><LEVEL_START>"level(o)"<LEVEL_END><HEADING_START>"o."Object Heading""<HEADING_END><COLUMNS_START>""<COLUMN_START>"o."840_Responsible Stakeholder""<COLUMN_END>""<COLUMN_START>"o."011_DXL_Object State""<COLUMN_END>""<COLUMN_START>"o."011_Object State""<COLUMN_END>""<COLUMN_START>"o."010_Object Type""<COLUMN_END>""<COLUMN_START>"o."820_EPBi Variant""<COLUMN_END>""<COLUMN_START>"o."Object Text""<COLUMN_END>""<COLUMN_START>"o."Object Text_DXL""<COLUMN_END>""<COLUMNS_END>"
            
            out << "<OUTLINKS_START>"
            for outLink in all (o -> "*") do {
                out << "<OUTLINK_START>"(fullName targetVersion outLink) ":" (targetAbsNo (outLink)) "<OUTLINK_END>"         
            }
            out << "<OUTLINKS_END>"
            out << "<INLINKS_START>"
            for lrIn in each (o <- "*") do {            
                out << "<INLINK_START>"(fullName sourceVersion lrIn) ":" (sourceAbsNo (lrIn)) "<INLINK_END>" 
            }
            out << "<INLINKS_END>"

            out << "<REQUIREMENT_END>"        
        }

        out << "<REQUIREMENTS_END>" "\n"    

        out << "<<<MODULE_END>>>" "\n"

        
